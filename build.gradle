plugins {
	id 'org.springframework.boot' version '2.2.0.BUILD-SNAPSHOT'
	id 'io.spring.dependency-management' version '1.0.8.RELEASE'
	id 'java'
	id 'war'
	id 'org.flywaydb.flyway' version '5.2.4'
	id 'nu.studer.jooq' version '3.0.3'
}

group = 'com.example'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-jooq'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.flywaydb:flyway-core'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'mysql:mysql-connector-java'
	annotationProcessor 'org.projectlombok:lombok'
	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
	testImplementation 'org.springframework.security:spring-security-test'

	jooqRuntime 'mysql:mysql-connector-java'
	compile 'mysql:mysql-connector-java'
}

test {
	useJUnitPlatform()
}

war {
	enabled = true
}

def props = new Properties()
	file("${projectDir}/src/main/resources/application.properties").withInputStream {
		stream -> props.load(stream)
}

flyway {
    url = props.getProperty('spring.datasource.url')
    user = props.getProperty('spring.datasource.username')
    password = props.getProperty('spring.datasource.password')
}

jooq {
  tables(sourceSets.main) {
    jdbc {
      driver = props.getProperty('spring.datasource.driver-class-name')
      url = props.getProperty('spring.datasource.url')
      user = props.getProperty('spring.datasource.username')
      password = props.getProperty('spring.datasource.password')
      properties {
        property {
          key = 'ssl'
          value = 'true'
        }
      }
    }
    generator {
      name = 'org.jooq.codegen.DefaultGenerator'
      database {
        name = 'org.jooq.meta.mysql.MySQLDatabase'
        inputSchema = 'shigure'
		includes = '.*'
		excludes = 'flyway_schema_history'
      }
      generate {
      	daos = true
      	springAnnotations = true
      	javaTimeTypes = true
        fluentSetters = true
      }
      target {
        packageName = 'com.example.shigure.jooq'
        directory = 'src/main/java'
      }
    }
  }
}

generateTablesJooqSchemaSource.dependsOn('flywayMigrate')
compileJava.dependsOn -= 'generateTablesJooqSchemaSource'
